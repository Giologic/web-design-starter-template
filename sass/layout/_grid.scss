.row {
  max-width: $grid-width;
  margin: 0 auto; // Trick to center block elements inside another block element

  &:not(:last-child) {
    margin-bottom: $gutter-vertical;

    @include respond(tab-port) {
      margin-bottom: $gutter-vertical-small;
    }
  }

  @include respond(tab-port) {
    max-width: 50rem;
    padding: 0 3rem;
  }

  @include clearfix;

  // DRY principle application

  // Attribute selector
  // ^ works like starts with or REGEX: col-*
  // * works like contains or REGEX: *col-*
  // $ works like ends with or REGEX: *col-

  [class^="col-"] {
    float: left;

    // TODO: Remove once development starts: START
    background-image: linear-gradient(to bottom right, $color-primary, $color-primary-dark);
    height: 5rem;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;

    // TODO: Remove once development starts: END

    &:not(:last-child) {
      margin-right: $gutter-horizontal;
      @include respond(tab-port) {
        margin-right: 0;
        margin-bottom: $gutter-vertical-small;
      }
    }

    @include respond(tab-port) {
      width: 100% !important;
    }
  }

  .col-1-of-2 {
    width: calc( (100% - #{$gutter-horizontal} ) /2);
  }

  .col-1-of-3 {
    width: calc( (100% - 2 * #{$gutter-horizontal} ) / 3);
  }

  .col-2-of-3 {
    width: calc( 2 * ((100% - 2 * #{$gutter-horizontal} ) / 3) + #{$gutter-horizontal} );
  }

  .col-1-of-4 {
    width: calc( (100% - 3 * #{$gutter-horizontal} ) / 4);
  }

  .col-2-of-4 {
    width: calc(2 * ((100% - 3 * #{$gutter-horizontal} ) / 4) + #{$gutter-horizontal});
  }

  .col-3-of-4 {
    width: calc(3 * ((100% - 3 * #{$gutter-horizontal} ) / 4) + 2 * #{$gutter-horizontal});
  }

}